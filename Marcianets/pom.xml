<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.xaviersala</groupId>
  <artifactId>Marcianets</artifactId>
  <version>0.0.2-SNAPSHOT</version>
  <name>marcianets</name>
  <description>Joc de matar marcians fent servir her√®ncia</description>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
    </dependency>
    <!-- <dependency> -->
    <!-- <groupId>acm</groupId> -->
    <!-- <artifactId>acm</artifactId> -->
    <!-- <scope>system</scope> -->
    <!-- <systemPath>${basedir}/src/lib/acm.jar</systemPath> -->
    <!-- <version>1.0</version> -->
    <!-- </dependency> -->
    <dependency>
      <groupId>graphics</groupId>
      <artifactId>acm</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <sonar.language>java</sonar.language>
    <sonar.jacoco.itReportPath>${project.basedir}/reports/jacoco.exec</sonar.jacoco.itReportPath>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <!-- Plugin that gives ability to generate your projects site -->
        <artifactId>maven-site-plugin</artifactId>
        <version>3.0-beta-2</version>
        <configuration>
          <!-- Reports that will be displayed on a generated site -->
          <reportPlugins>
            <!-- Produces a cross-reference of the project's sources. This is useful
              for other reports like PMD or Checkstyle. When this plugin is used with checkstyle
              you can see code that produces style warning/error in the report. -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jxr-plugin</artifactId>
              <version>2.1</version>
              <configuration>
                <aggregate>true</aggregate>
              </configuration>
            </plugin>
            <!-- Checks projects code conventions -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
              <version>2.6</version>
              <configuration>
                <configLocation>check_style.xml</configLocation>
              </configuration>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.0.201403182114</version>
        <configuration>
          <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
          <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.16</version>
        <executions>
          <execution>
            <id>verify</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <argLine>${jacoco.agent.arg}</argLine>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.5.2</version>
        <configuration>
          <!-- Enables analysis which takes more memory but finds more bugs. If
            you run out of memory, changes the value of the effort element to 'Low'. -->
          <effort>Max</effort>
          <!-- Reports all bugs (other values are medium and max) -->
          <threshold>Low</threshold>
          <!-- Produces XML report -->
          <xmlOutput>true</xmlOutput>
          <!-- Configures the directory in which the XML report is created -->
          <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.11</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle-result.xml</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.5.2</version>
        <configuration>
          <!-- Enables analysis which takes more memory but finds more bugs. If
            you run out of memory, changes the value of the effort element to 'low'. -->
          <effort>Max</effort>
          <!-- Reports all bugs (other values are medium and max) -->
          <threshold>Low</threshold>
          <!-- Produces XML report -->
          <xmlOutput>true</xmlOutput>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
